# always load the reset file first
#source-file ~/dotfiles/tmux.reset.conf

#bind-key " split-window
## settings
set-option -g destroy-unattached off

#? s.a. tmux-faq and http://anti.teamidiot.de/static/nei/*/Code/urxvt/tmux.conf
set -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]12;black\007\E]112\007:Cs=\E[%p1%d q:Csr=\E[2 q,rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]12;black\007:Cs=\E]777;Cs;%p1%d\007'

bind-key N new-session

# keep cwd with each new pane/ window
#set-option -g default-path "$PWD"
bind '"' split-window -c "#{pane_current_path}"
#test "$PWD" != "/usr/share/man" && echo "true" || echo "false"false
#bind '"' split-window if-shell "if [ '$PWD' != '/usr/share/man' ]; then true; else false; fi" -c "#{pane_current_path}"
#if-shell "if [[ `tmux -V | cut -d' ' -f2` -lt 2.1 ]]; then true; else false; fi"       'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

set-window-option -g mode-keys vi
#unbind 
bind Escape copy-mode
#unbind p
#bind p paste-buffer
unbind p
bind p previous-window
# is standard?
bind ] paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# unbind so that mc works, does not work
# unbind <C-CR>

#set -g @continuum-restore 'on'

bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# prefix key
unbind C-b
set -g prefix C-a
bind C-a send-prefix

### Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

### colors
## COLOUR (Solarized dark)
#
## default statusbar colors
#set-option -g status-bg black #base02
#set-option -g status-fg yellow #yellow
#set-option -g status-attr default
#
## default window title colors
#set-window-option -g window-status-fg brightblue #base0
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim
#
## active window title colors
#set-window-option -g window-status-current-fg brightred #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright
#
## pane border
#set-option -g pane-border-fg black #base02
#set-option -g pane-active-border-fg brightgreen #base01
#
## message text
#set-option -g message-bg black #base02
#set-option -g message-fg brightred #orange
#
## pane number display
#set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour brightred #orange
#
## clock
#set-window-option -g clock-mode-colour green #green

#### COLOUR (Solarized 256)
#
## default statusbar colors
#set-option -g status-bg colour235 #base02
#set-option -g status-fg colour136 #yellow
#set-option -g status-attr default
#
## default window title colors
#set-window-option -g window-status-fg colour244 #base0
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim
#
## active window title colors
#set-window-option -g window-status-current-fg colour166 #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright
#
## pane border
#set-option -g pane-border-fg colour235 #base02
#set-option -g pane-active-border-fg colour240 #base01
#
## message text
#set-option -g message-bg colour235 #base02
#set-option -g message-fg colour166 #orange
#
## pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour colour166 #orange
#
## clock
#set-window-option -g clock-mode-colour colour64 #green

# check if tpm is installed (s.a. https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md)
if "test ! -d ~/.tmux/plugins/tpm" \
     "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

## List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/vim-tmux'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'seebi/tmux-colors-solarized'
### wishlist
#set -g @plugin 'tmux-plugins/tmux-open'


#set -g @colors-solarized '256'
#set -g @colors-solarized 'dark'
#set -g @colors-solarized 'light'
#set -g @colors-solarized 'base16'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# export HOST=edgar /$HOST
# CPU, date, time. Vars only from `env`
set -g status-right "CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M:%S"
set -g status-left "$TERM | $USER @ $HOST"

if "test ! -d ~/.tmux/plugins/tpm" \
     "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

#set -g default-terminal "rxvt-unicode-256color"
set -g default-terminal "screen-256color"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

